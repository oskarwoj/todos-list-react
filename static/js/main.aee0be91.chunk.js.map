{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","useTasks.js","App.js","index.js"],"names":["StyledForm","styled","form","Input","input","Button","button","Form","addNewTask","inputRef","useRef","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trim","current","focus","ref","value","placeholder","onChange","target","TasksList","ul","Item","li","hidden","css","Content","span","done","toogleDone","remove","Tasks","tasks","hideDone","removeTask","toogleTaskDone","map","id","content","key","onClick","Container","div","Buttons","toogleHideDone","setAlldone","length","disabled","every","StyledSection","section","Header","Title","Body","Section","title","body","extraHeaderContent","StyledContainer","main","children","getInitialTasks","tasksFromLocaleStorage","localStorage","getItem","JSON","parse","useTasks","setTasks","useEffect","setItem","stringify","filter","task","App","setHideDone","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aee0be91.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  grid-gap: 20px;\r\n\r\n  @media (max-width: 767px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n`;\r\nexport const Button = styled.button`\r\n  padding: 10px;\r\n  background-color: hsl(180, 100%, 25%);\r\n  color: white;\r\n  border: none;\r\n  transition: background 0.5s, transform 0.5s;\r\n\r\n  &:hover {\r\n    background-color: hsl(180, 100%, 30%);\r\n    transform: scale(1.03);\r\n  }\r\n  &:active {\r\n    background-color: hsl(180, 100%, 35%);\r\n  }\r\n`;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const inputRef = useRef(null);\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (newTaskContent.trim() !== \"\") {\r\n      addNewTask(newTaskContent.trim());\r\n      setNewTaskContent(\"\");\r\n      focusInput();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Input\r\n        ref={inputRef}\r\n        value={newTaskContent}\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <Button>Dodaj zadanie</Button>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const TasksList = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: grid;\r\n  grid-template-columns: auto 1fr auto;\r\n  grid-gap: 10px;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n\r\n  ${({ hidden }) =>\r\n    hidden &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n  ${({ done }) =>\r\n    done &&\r\n    css`\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  color: white;\r\n  width: 30px;\r\n  height: 30px;\r\n  padding: 0;\r\n  transition: background 1s;\r\n\r\n  ${({ toogleDone }) =>\r\n    toogleDone &&\r\n    css`\r\n      background-color: hsl(120, 61%, 34%);\r\n\r\n      &:hover {\r\n        background-color: hsl(120, 61%, 70%);\r\n      }\r\n    `}\r\n\r\n  ${({ remove }) =>\r\n    remove &&\r\n    css`\r\n      background-color: hsl(348, 83%, 47%);\r\n\r\n      &:hover {\r\n        background-color: hsl(348, 83%, 70%);\r\n      }\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport { TasksList, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toogleTaskDone }) => {\r\n  return (\r\n    <TasksList>\r\n      {tasks.map(({ id, content, done }) => (\r\n        <Item key={id} hidden={done && hideDone}>\r\n          <Button toogleDone onClick={() => toogleTaskDone(id)}>\r\n            {done ? \"âœ”\" : \"\"}\r\n          </Button>\r\n          <Content done={done}>{content}</Content>\r\n          <Button remove onClick={() => removeTask(id)}>\r\n            ðŸ—‘\r\n          </Button>\r\n        </Item>\r\n      ))}\r\n    </TasksList>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: transparent;\r\n  color: teal;\r\n  border: none;\r\n  margin: 0 0 0 20px;\r\n  transition: color 0.3s;\r\n\r\n  @media (max-width: 767px) {\r\n    flex-basis: 100%;\r\n    margin: 10px;\r\n  }\r\n\r\n  &:hover {\r\n    color: hsl(180, 100%, 35%);\r\n  }\r\n\r\n  &:disabled {\r\n    color: #ccc;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Button, Container } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toogleHideDone, setAlldone }) => (\r\n  <Container>\r\n    {tasks.length > 0 && (\r\n      <>\r\n        <Button onClick={toogleHideDone}>\r\n          {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n        </Button>\r\n        <Button onClick={setAlldone} disabled={tasks.every(({ done }) => done)}>\r\n          UkoÅ„cz wszystkie\r\n        </Button>\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nexport default Buttons;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n  margin: 10px 0;\r\n  background: white;\r\n  box-shadow: 0 0 5px #ddd;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  border-bottom: 1px solid #ddd;\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 20px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n\r\n  @media (max-width: 767px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 20px;\r\n  margin: 0;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  padding: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport { Header, StyledSection, Title, Body } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <StyledSection>\r\n    <Header>\r\n      <Title>{title}</Title>\r\n      {extraHeaderContent}\r\n    </Header>\r\n    <Body>{body}</Body>\r\n  </StyledSection>\r\n);\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n  <StyledContainer>{children}</StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst getInitialTasks = () => {\r\n  const tasksFromLocaleStorage = localStorage.getItem(\"tasks\");\r\n\r\n  return tasksFromLocaleStorage ? JSON.parse(tasksFromLocaleStorage) : [];\r\n};\r\n\r\nconst useTasks = () => {\r\n  const [tasks, setTasks] = useState(getInitialTasks);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const removeTask = (id) => {\r\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const toogleTaskDone = (id) => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return { ...task, done: !task.done };\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  const setAlldone = () => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => ({\r\n        ...task,\r\n        done: true,\r\n      }))\r\n    );\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks((tasks) => [\r\n      ...tasks,\r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return {\r\n    tasks,\r\n    removeTask,\r\n    toogleTaskDone,\r\n    setAlldone,\r\n    addNewTask,\r\n  };\r\n};\r\n\r\nexport default useTasks;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport useTasks from \"./useTasks\";\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const toogleHideDone = () => {\r\n    setHideDone((hideDone) => !hideDone);\r\n  };\r\n\r\n  const {\r\n    tasks,\r\n    removeTask,\r\n    toogleTaskDone,\r\n    setAlldone,\r\n    addNewTask,\r\n  } = useTasks();\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Lista zadaÅ„\" />\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={<Form addNewTask={addNewTask} />}\r\n      />\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        body={\r\n          <Tasks\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toogleTaskDone={toogleTaskDone}\r\n          />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toogleHideDone={toogleHideDone}\r\n            setAlldone={setAlldone}\r\n          />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}